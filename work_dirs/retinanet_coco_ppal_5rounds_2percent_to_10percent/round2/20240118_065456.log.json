{"env_info": "sys.platform: linux\nPython: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]\nCUDA available: True\nGPU 0: Tesla T4\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 12.2, V12.2.140\nGCC: x86_64-linux-gnu-gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nPyTorch: 1.11.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0+cu113\nOpenCV: 4.8.0\nMMCV: 1.5.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.3\nMMDetection: 2.20.0+f3aac93", "config": "model = dict(\n    type='RetinaNet',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint='data/pretrain_models/resnet50-19c8e357.pth')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=1,\n        add_extra_convs='on_input',\n        num_outs=5),\n    bbox_head=dict(\n        type='RetinaQualityEMAHead',\n        num_classes=10,\n        in_channels=256,\n        stacked_convs=4,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            octave_base_scale=4,\n            scales_per_octave=3,\n            ratios=[0.5, 1.0, 2.0],\n            strides=[8, 16, 32, 64, 128]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0),\n        base_momentum=0.99),\n    train_cfg=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.4,\n            min_pos_iou=0,\n            ignore_iof_thr=-1),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    test_cfg=dict(\n        nms_pre=5000,\n        min_bbox_size=0,\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[20])\nrunner = dict(type='EpochBasedRunner', max_epochs=30)\ncheckpoint_config = dict(interval=30, max_keep_ckpts=1, by_epoch=True)\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nmmdet_base = '../../_base_'\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=6,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file=\n        'work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round2/annotations/labeled.json',\n        img_prefix='data/coco/train2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='data/coco/annotations/instances_val2017.json',\n        img_prefix='data/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='data/coco/annotations/instances_val2017.json',\n        img_prefix='data/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlabeled_data = 'work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round2/annotations/labeled.json'\nunlabeled_data = 'work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round2/annotations/unlabeled.json'\nevaluation = dict(interval=999999, metric='bbox')\nwork_dir = 'work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round2'\nauto_resume = False\ngpu_ids = range(0, 1)\n", "seed": 1395584698, "exp_name": "retinanet_26e.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00099, "memory": 8850, "data_time": 0.25036, "loss_cls": 1.14532, "loss_bbox": 2.16887, "loss": 3.31418, "grad_norm": 8.07594, "time": 2.34878}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00199, "memory": 8976, "data_time": 0.02179, "loss_cls": 1.1018, "loss_bbox": 1.275, "loss": 2.3768, "grad_norm": 11.94646, "time": 2.11502}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00299, "memory": 8998, "data_time": 0.02194, "loss_cls": 0.96972, "loss_bbox": 1.22113, "loss": 2.19085, "grad_norm": 9.53359, "time": 2.11589}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00399, "memory": 8998, "data_time": 0.8144, "loss_cls": 1.05188, "loss_bbox": 1.24199, "loss": 2.29387, "grad_norm": 8.21376, "time": 2.92316}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00499, "memory": 9048, "data_time": 0.02147, "loss_cls": 0.94317, "loss_bbox": 1.17454, "loss": 2.11771, "grad_norm": 4.83992, "time": 2.10476}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00598, "memory": 9048, "data_time": 0.02228, "loss_cls": 1.05825, "loss_bbox": 1.13581, "loss": 2.19407, "grad_norm": 2.24729, "time": 2.1035}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00698, "memory": 9048, "data_time": 0.02243, "loss_cls": 0.95531, "loss_bbox": 1.09213, "loss": 2.04744, "grad_norm": 2.78679, "time": 2.10797}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.00798, "memory": 9048, "data_time": 0.42063, "loss_cls": 0.9146, "loss_bbox": 1.07309, "loss": 1.98769, "grad_norm": 2.56542, "time": 2.5358}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.00898, "memory": 9048, "data_time": 0.02175, "loss_cls": 0.87983, "loss_bbox": 1.05923, "loss": 1.93906, "grad_norm": 2.99126, "time": 2.10136}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.00998, "memory": 9048, "data_time": 0.02255, "loss_cls": 0.87184, "loss_bbox": 1.02111, "loss": 1.89295, "grad_norm": 2.04545, "time": 2.08633}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.01, "memory": 9048, "data_time": 0.02323, "loss_cls": 0.82577, "loss_bbox": 1.01594, "loss": 1.84171, "grad_norm": 1.98612, "time": 2.10337}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.01, "memory": 9048, "data_time": 0.2843, "loss_cls": 0.76514, "loss_bbox": 0.96886, "loss": 1.734, "grad_norm": 2.82737, "time": 2.36379}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.01, "memory": 9048, "data_time": 0.02252, "loss_cls": 0.6907, "loss_bbox": 0.92432, "loss": 1.61503, "grad_norm": 2.65022, "time": 2.09581}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.01, "memory": 9048, "data_time": 0.0234, "loss_cls": 0.66402, "loss_bbox": 0.9345, "loss": 1.59852, "grad_norm": 2.80565, "time": 2.09662}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.01, "memory": 9048, "data_time": 1.8982, "loss_cls": 0.64718, "loss_bbox": 0.85494, "loss": 1.50211, "grad_norm": 2.61724, "time": 3.86932}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.01, "memory": 9048, "data_time": 0.02164, "loss_cls": 0.61381, "loss_bbox": 0.92126, "loss": 1.53507, "grad_norm": 2.76002, "time": 2.10336}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.01, "memory": 9048, "data_time": 0.02401, "loss_cls": 0.62983, "loss_bbox": 0.88928, "loss": 1.51911, "grad_norm": 2.71598, "time": 2.09227}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.01, "memory": 9048, "data_time": 0.02304, "loss_cls": 0.62523, "loss_bbox": 0.87438, "loss": 1.49961, "grad_norm": 2.71384, "time": 2.10027}
{"mode": "train", "epoch": 6, "iter": 950, "lr": 0.01, "memory": 9048, "data_time": 0.57806, "loss_cls": 0.60423, "loss_bbox": 0.85407, "loss": 1.45831, "grad_norm": 2.76118, "time": 2.69123}
{"mode": "train", "epoch": 6, "iter": 1000, "lr": 0.01, "memory": 9048, "data_time": 0.02224, "loss_cls": 0.58843, "loss_bbox": 0.88047, "loss": 1.4689, "grad_norm": 2.5816, "time": 2.1018}
{"mode": "train", "epoch": 6, "iter": 1050, "lr": 0.01, "memory": 9048, "data_time": 0.02286, "loss_cls": 0.58866, "loss_bbox": 0.83142, "loss": 1.42008, "grad_norm": 2.76087, "time": 2.08952}
{"mode": "train", "epoch": 6, "iter": 1100, "lr": 0.01, "memory": 9048, "data_time": 0.02275, "loss_cls": 0.57983, "loss_bbox": 0.83027, "loss": 1.4101, "grad_norm": 2.55667, "time": 2.1076}
{"mode": "train", "epoch": 7, "iter": 1150, "lr": 0.01, "memory": 9048, "data_time": 0.35028, "loss_cls": 0.54164, "loss_bbox": 0.82578, "loss": 1.36742, "grad_norm": 2.7354, "time": 2.40204}
{"mode": "train", "epoch": 7, "iter": 1200, "lr": 0.01, "memory": 9048, "data_time": 0.02257, "loss_cls": 0.56373, "loss_bbox": 0.80821, "loss": 1.37194, "grad_norm": 2.80367, "time": 2.101}
{"mode": "train", "epoch": 7, "iter": 1250, "lr": 0.01, "memory": 9048, "data_time": 0.02216, "loss_cls": 0.54921, "loss_bbox": 0.82397, "loss": 1.37318, "grad_norm": 2.87664, "time": 2.08012}
{"mode": "train", "epoch": 7, "iter": 1300, "lr": 0.01, "memory": 9050, "data_time": 0.0228, "loss_cls": 0.60875, "loss_bbox": 0.82863, "loss": 1.43738, "grad_norm": 3.24801, "time": 2.09626}
{"mode": "train", "epoch": 8, "iter": 1350, "lr": 0.01, "memory": 9050, "data_time": 0.25101, "loss_cls": 0.56851, "loss_bbox": 0.83255, "loss": 1.40106, "grad_norm": 2.95299, "time": 2.32746}
{"mode": "train", "epoch": 8, "iter": 1400, "lr": 0.01, "memory": 9050, "data_time": 0.02255, "loss_cls": 0.54206, "loss_bbox": 0.77301, "loss": 1.31507, "grad_norm": 2.52208, "time": 2.1021}
{"mode": "train", "epoch": 8, "iter": 1450, "lr": 0.01, "memory": 9050, "data_time": 0.02231, "loss_cls": 0.58053, "loss_bbox": 0.76932, "loss": 1.34985, "grad_norm": 3.28761, "time": 2.10115}
{"mode": "train", "epoch": 9, "iter": 1500, "lr": 0.01, "memory": 9050, "data_time": 0.95031, "loss_cls": 0.49133, "loss_bbox": 0.77781, "loss": 1.26914, "grad_norm": 3.25801, "time": 3.00449}
{"mode": "train", "epoch": 9, "iter": 1550, "lr": 0.01, "memory": 9050, "data_time": 0.02176, "loss_cls": 0.5094, "loss_bbox": 0.78026, "loss": 1.28966, "grad_norm": 2.79499, "time": 2.09397}
{"mode": "train", "epoch": 9, "iter": 1600, "lr": 0.01, "memory": 9050, "data_time": 0.02268, "loss_cls": 0.53024, "loss_bbox": 0.76109, "loss": 1.29133, "grad_norm": 3.00892, "time": 2.09532}
{"mode": "train", "epoch": 9, "iter": 1650, "lr": 0.01, "memory": 9050, "data_time": 0.02364, "loss_cls": 0.53976, "loss_bbox": 0.73028, "loss": 1.27004, "grad_norm": 2.94178, "time": 2.09535}
{"mode": "train", "epoch": 10, "iter": 1700, "lr": 0.01, "memory": 9050, "data_time": 0.46005, "loss_cls": 0.51863, "loss_bbox": 0.75461, "loss": 1.27324, "grad_norm": 2.69824, "time": 2.57132}
{"mode": "train", "epoch": 10, "iter": 1750, "lr": 0.01, "memory": 9050, "data_time": 0.02329, "loss_cls": 0.51957, "loss_bbox": 0.70977, "loss": 1.22934, "grad_norm": 2.87336, "time": 2.09291}
{"mode": "train", "epoch": 10, "iter": 1800, "lr": 0.01, "memory": 9050, "data_time": 0.02269, "loss_cls": 0.50888, "loss_bbox": 0.76129, "loss": 1.27017, "grad_norm": 2.74433, "time": 2.09001}
{"mode": "train", "epoch": 10, "iter": 1850, "lr": 0.01, "memory": 9050, "data_time": 0.02259, "loss_cls": 0.5042, "loss_bbox": 0.75374, "loss": 1.25793, "grad_norm": 2.79744, "time": 2.09666}
{"mode": "train", "epoch": 11, "iter": 1900, "lr": 0.01, "memory": 9050, "data_time": 0.302, "loss_cls": 0.48324, "loss_bbox": 0.67513, "loss": 1.15838, "grad_norm": 2.7664, "time": 2.39129}
{"mode": "train", "epoch": 11, "iter": 1950, "lr": 0.01, "memory": 9050, "data_time": 0.02251, "loss_cls": 0.48761, "loss_bbox": 0.70287, "loss": 1.19048, "grad_norm": 3.09049, "time": 2.10189}
{"mode": "train", "epoch": 11, "iter": 2000, "lr": 0.01, "memory": 9050, "data_time": 0.02259, "loss_cls": 0.53057, "loss_bbox": 0.70379, "loss": 1.23436, "grad_norm": 3.04969, "time": 2.10141}
{"mode": "train", "epoch": 12, "iter": 2050, "lr": 0.01, "memory": 9050, "data_time": 2.73851, "loss_cls": 0.50298, "loss_bbox": 0.82346, "loss": 1.32644, "grad_norm": 3.50887, "time": 4.75147}
{"mode": "train", "epoch": 12, "iter": 2100, "lr": 0.01, "memory": 9050, "data_time": 0.02207, "loss_cls": 0.50177, "loss_bbox": 0.66949, "loss": 1.17127, "grad_norm": 3.11431, "time": 2.10784}
{"mode": "train", "epoch": 12, "iter": 2150, "lr": 0.01, "memory": 9050, "data_time": 0.0227, "loss_cls": 0.55268, "loss_bbox": 0.69538, "loss": 1.24805, "grad_norm": 3.20963, "time": 2.08041}
{"mode": "train", "epoch": 12, "iter": 2200, "lr": 0.01, "memory": 9050, "data_time": 0.02232, "loss_cls": 0.48019, "loss_bbox": 0.74524, "loss": 1.22543, "grad_norm": 2.76386, "time": 2.09641}
{"mode": "train", "epoch": 13, "iter": 2250, "lr": 0.01, "memory": 9050, "data_time": 0.63892, "loss_cls": 0.47095, "loss_bbox": 0.68031, "loss": 1.15126, "grad_norm": 2.66743, "time": 2.74747}
{"mode": "train", "epoch": 13, "iter": 2300, "lr": 0.01, "memory": 9050, "data_time": 0.02227, "loss_cls": 0.47116, "loss_bbox": 0.64792, "loss": 1.11908, "grad_norm": 2.85024, "time": 2.10286}
{"mode": "train", "epoch": 13, "iter": 2350, "lr": 0.01, "memory": 9050, "data_time": 0.0227, "loss_cls": 0.46196, "loss_bbox": 0.66502, "loss": 1.12698, "grad_norm": 2.84412, "time": 2.09627}
{"mode": "train", "epoch": 13, "iter": 2400, "lr": 0.01, "memory": 9050, "data_time": 0.02348, "loss_cls": 0.47756, "loss_bbox": 0.65844, "loss": 1.136, "grad_norm": 3.03247, "time": 2.09994}
{"mode": "train", "epoch": 14, "iter": 2450, "lr": 0.01, "memory": 9050, "data_time": 0.37445, "loss_cls": 0.46312, "loss_bbox": 0.64088, "loss": 1.104, "grad_norm": 2.52971, "time": 2.46965}
{"mode": "train", "epoch": 14, "iter": 2500, "lr": 0.01, "memory": 9050, "data_time": 0.0222, "loss_cls": 0.44773, "loss_bbox": 0.64285, "loss": 1.09057, "grad_norm": 2.83807, "time": 2.08531}
{"mode": "train", "epoch": 14, "iter": 2550, "lr": 0.01, "memory": 9050, "data_time": 0.0229, "loss_cls": 0.48373, "loss_bbox": 0.6449, "loss": 1.12862, "grad_norm": 3.40045, "time": 2.08938}
{"mode": "train", "epoch": 14, "iter": 2600, "lr": 0.01, "memory": 9050, "data_time": 0.02269, "loss_cls": 0.45502, "loss_bbox": 0.66582, "loss": 1.12084, "grad_norm": 3.03045, "time": 2.10476}
{"mode": "train", "epoch": 15, "iter": 2650, "lr": 0.01, "memory": 9050, "data_time": 0.26435, "loss_cls": 0.45977, "loss_bbox": 0.63262, "loss": 1.0924, "grad_norm": 2.62924, "time": 2.29944}
{"mode": "train", "epoch": 15, "iter": 2700, "lr": 0.01, "memory": 9050, "data_time": 0.0227, "loss_cls": 0.46422, "loss_bbox": 0.64935, "loss": 1.11356, "grad_norm": 3.11729, "time": 2.08643}
{"mode": "train", "epoch": 15, "iter": 2750, "lr": 0.01, "memory": 9050, "data_time": 0.02301, "loss_cls": 0.4581, "loss_bbox": 0.6375, "loss": 1.0956, "grad_norm": 3.0628, "time": 2.09042}
{"mode": "train", "epoch": 16, "iter": 2800, "lr": 0.01, "memory": 9050, "data_time": 1.13782, "loss_cls": 0.43538, "loss_bbox": 0.58805, "loss": 1.02343, "grad_norm": 2.87159, "time": 3.15656}
{"mode": "train", "epoch": 16, "iter": 2850, "lr": 0.01, "memory": 9050, "data_time": 0.02363, "loss_cls": 0.4642, "loss_bbox": 0.62579, "loss": 1.08999, "grad_norm": 3.09149, "time": 2.07832}
{"mode": "train", "epoch": 16, "iter": 2900, "lr": 0.01, "memory": 9050, "data_time": 0.02297, "loss_cls": 0.42458, "loss_bbox": 0.61219, "loss": 1.03677, "grad_norm": 2.6888, "time": 2.09333}
{"mode": "train", "epoch": 16, "iter": 2950, "lr": 0.01, "memory": 9050, "data_time": 0.02314, "loss_cls": 0.44069, "loss_bbox": 0.61741, "loss": 1.0581, "grad_norm": 2.91991, "time": 2.10441}
{"mode": "train", "epoch": 17, "iter": 3000, "lr": 0.01, "memory": 9050, "data_time": 0.49653, "loss_cls": 0.41857, "loss_bbox": 0.59635, "loss": 1.01492, "grad_norm": 3.12188, "time": 2.53011}
{"mode": "train", "epoch": 17, "iter": 3050, "lr": 0.01, "memory": 9050, "data_time": 0.02224, "loss_cls": 0.44256, "loss_bbox": 0.584, "loss": 1.02656, "grad_norm": 2.72705, "time": 2.06845}
{"mode": "train", "epoch": 17, "iter": 3100, "lr": 0.01, "memory": 9050, "data_time": 0.02285, "loss_cls": 0.43992, "loss_bbox": 0.63126, "loss": 1.07118, "grad_norm": 3.28845, "time": 2.09832}
{"mode": "train", "epoch": 17, "iter": 3150, "lr": 0.01, "memory": 9050, "data_time": 0.02291, "loss_cls": 0.45046, "loss_bbox": 0.62547, "loss": 1.07593, "grad_norm": 3.11547, "time": 2.079}
{"mode": "train", "epoch": 18, "iter": 3200, "lr": 0.01, "memory": 9050, "data_time": 0.31001, "loss_cls": 0.47282, "loss_bbox": 0.62313, "loss": 1.09594, "grad_norm": 3.24103, "time": 2.38857}
{"mode": "train", "epoch": 18, "iter": 3250, "lr": 0.01, "memory": 9050, "data_time": 0.02258, "loss_cls": 0.43122, "loss_bbox": 0.59629, "loss": 1.02751, "grad_norm": 3.01144, "time": 2.0862}
{"mode": "train", "epoch": 18, "iter": 3300, "lr": 0.01, "memory": 9050, "data_time": 0.02277, "loss_cls": 0.44521, "loss_bbox": 0.59887, "loss": 1.04407, "grad_norm": 3.11081, "time": 2.09809}
{"mode": "train", "epoch": 19, "iter": 3350, "lr": 0.01, "memory": 9050, "data_time": 5.53857, "loss_cls": 0.41144, "loss_bbox": 0.55393, "loss": 0.96537, "grad_norm": 3.12911, "time": 7.56056}
{"mode": "train", "epoch": 19, "iter": 3400, "lr": 0.01, "memory": 9050, "data_time": 0.02215, "loss_cls": 0.41157, "loss_bbox": 0.56791, "loss": 0.97947, "grad_norm": 2.87498, "time": 2.08559}
{"mode": "train", "epoch": 19, "iter": 3450, "lr": 0.01, "memory": 9050, "data_time": 0.02243, "loss_cls": 0.41638, "loss_bbox": 0.56818, "loss": 0.98456, "grad_norm": 2.8612, "time": 2.10227}
{"mode": "train", "epoch": 19, "iter": 3500, "lr": 0.01, "memory": 9050, "data_time": 0.02294, "loss_cls": 0.40631, "loss_bbox": 0.56298, "loss": 0.96929, "grad_norm": 2.73124, "time": 2.08176}
{"mode": "train", "epoch": 20, "iter": 3550, "lr": 0.01, "memory": 9050, "data_time": 0.71785, "loss_cls": 0.40957, "loss_bbox": 0.56755, "loss": 0.97712, "grad_norm": 2.54103, "time": 2.79873}
{"mode": "train", "epoch": 20, "iter": 3600, "lr": 0.01, "memory": 9050, "data_time": 0.0221, "loss_cls": 0.40688, "loss_bbox": 0.5609, "loss": 0.96778, "grad_norm": 3.22284, "time": 2.10343}
{"mode": "train", "epoch": 20, "iter": 3650, "lr": 0.01, "memory": 9050, "data_time": 0.02207, "loss_cls": 0.41714, "loss_bbox": 0.5782, "loss": 0.99534, "grad_norm": 3.08231, "time": 2.09037}
{"mode": "train", "epoch": 20, "iter": 3700, "lr": 0.01, "memory": 9050, "data_time": 0.02288, "loss_cls": 0.4174, "loss_bbox": 0.57179, "loss": 0.98918, "grad_norm": 3.01682, "time": 2.08167}
{"mode": "train", "epoch": 21, "iter": 3750, "lr": 0.001, "memory": 9050, "data_time": 0.39417, "loss_cls": 0.37619, "loss_bbox": 0.51489, "loss": 0.89108, "grad_norm": 2.52502, "time": 2.49588}
{"mode": "train", "epoch": 21, "iter": 3800, "lr": 0.001, "memory": 9050, "data_time": 0.02255, "loss_cls": 0.36704, "loss_bbox": 0.49086, "loss": 0.8579, "grad_norm": 2.24844, "time": 2.08884}
{"mode": "train", "epoch": 21, "iter": 3850, "lr": 0.001, "memory": 9050, "data_time": 0.02244, "loss_cls": 0.36482, "loss_bbox": 0.48171, "loss": 0.84653, "grad_norm": 2.22031, "time": 2.0989}
{"mode": "train", "epoch": 21, "iter": 3900, "lr": 0.001, "memory": 9050, "data_time": 0.02306, "loss_cls": 0.37331, "loss_bbox": 0.50752, "loss": 0.88083, "grad_norm": 2.15578, "time": 2.09762}
{"mode": "train", "epoch": 22, "iter": 3950, "lr": 0.001, "memory": 9050, "data_time": 0.26936, "loss_cls": 0.36173, "loss_bbox": 0.477, "loss": 0.83873, "grad_norm": 2.24616, "time": 2.33586}
{"mode": "train", "epoch": 22, "iter": 4000, "lr": 0.001, "memory": 9050, "data_time": 0.0219, "loss_cls": 0.37041, "loss_bbox": 0.48542, "loss": 0.85583, "grad_norm": 2.17516, "time": 2.10522}
{"mode": "train", "epoch": 22, "iter": 4050, "lr": 0.001, "memory": 9050, "data_time": 0.02319, "loss_cls": 0.37126, "loss_bbox": 0.48151, "loss": 0.85277, "grad_norm": 2.19516, "time": 2.09797}
{"mode": "train", "epoch": 23, "iter": 4100, "lr": 0.001, "memory": 9050, "data_time": 1.39691, "loss_cls": 0.34757, "loss_bbox": 0.45554, "loss": 0.80311, "grad_norm": 2.06267, "time": 3.46692}
{"mode": "train", "epoch": 23, "iter": 4150, "lr": 0.001, "memory": 9050, "data_time": 0.02177, "loss_cls": 0.35653, "loss_bbox": 0.45509, "loss": 0.81162, "grad_norm": 2.15223, "time": 2.1097}
{"mode": "train", "epoch": 23, "iter": 4200, "lr": 0.001, "memory": 9050, "data_time": 0.02256, "loss_cls": 0.34643, "loss_bbox": 0.45886, "loss": 0.80528, "grad_norm": 2.28396, "time": 2.09583}
{"mode": "train", "epoch": 23, "iter": 4250, "lr": 0.001, "memory": 9050, "data_time": 0.02269, "loss_cls": 0.36846, "loss_bbox": 0.48893, "loss": 0.85738, "grad_norm": 2.32864, "time": 2.08807}
{"mode": "train", "epoch": 24, "iter": 4300, "lr": 0.001, "memory": 9050, "data_time": 0.52633, "loss_cls": 0.36215, "loss_bbox": 0.44144, "loss": 0.8036, "grad_norm": 2.157, "time": 2.63647}
{"mode": "train", "epoch": 24, "iter": 4350, "lr": 0.001, "memory": 9050, "data_time": 0.022, "loss_cls": 0.3384, "loss_bbox": 0.46648, "loss": 0.80487, "grad_norm": 2.11537, "time": 2.08907}
{"mode": "train", "epoch": 24, "iter": 4400, "lr": 0.001, "memory": 9050, "data_time": 0.02255, "loss_cls": 0.36507, "loss_bbox": 0.45761, "loss": 0.82269, "grad_norm": 2.38391, "time": 2.09034}
{"mode": "train", "epoch": 24, "iter": 4450, "lr": 0.001, "memory": 9050, "data_time": 0.02324, "loss_cls": 0.34413, "loss_bbox": 0.46456, "loss": 0.80869, "grad_norm": 2.14221, "time": 2.09521}
{"mode": "train", "epoch": 25, "iter": 4500, "lr": 0.001, "memory": 9050, "data_time": 0.3369, "loss_cls": 0.33339, "loss_bbox": 0.45476, "loss": 0.78815, "grad_norm": 2.1101, "time": 2.42232}
{"mode": "train", "epoch": 25, "iter": 4550, "lr": 0.001, "memory": 9050, "data_time": 0.02248, "loss_cls": 0.35387, "loss_bbox": 0.44275, "loss": 0.79662, "grad_norm": 2.25915, "time": 2.09286}
{"mode": "train", "epoch": 25, "iter": 4600, "lr": 0.001, "memory": 9050, "data_time": 0.02315, "loss_cls": 0.35397, "loss_bbox": 0.45752, "loss": 0.81149, "grad_norm": 2.35456, "time": 2.10481}
{"mode": "train", "epoch": 25, "iter": 4650, "lr": 0.001, "memory": 9050, "data_time": 0.02307, "loss_cls": 0.34814, "loss_bbox": 0.45339, "loss": 0.80153, "grad_norm": 2.17702, "time": 2.0951}
{"mode": "train", "epoch": 26, "iter": 4700, "lr": 0.001, "memory": 9050, "data_time": 0.24394, "loss_cls": 0.34471, "loss_bbox": 0.44543, "loss": 0.79014, "grad_norm": 2.18504, "time": 2.31767}
{"mode": "train", "epoch": 26, "iter": 4750, "lr": 0.001, "memory": 9050, "data_time": 0.02312, "loss_cls": 0.34472, "loss_bbox": 0.44402, "loss": 0.78874, "grad_norm": 2.29604, "time": 2.09608}
{"mode": "train", "epoch": 26, "iter": 4800, "lr": 0.001, "memory": 9050, "data_time": 0.02289, "loss_cls": 0.33518, "loss_bbox": 0.43927, "loss": 0.77446, "grad_norm": 2.15225, "time": 2.10224}
{"mode": "train", "epoch": 27, "iter": 4850, "lr": 0.001, "memory": 9050, "data_time": 0.81373, "loss_cls": 0.33462, "loss_bbox": 0.43918, "loss": 0.7738, "grad_norm": 2.1332, "time": 2.88435}
{"mode": "train", "epoch": 27, "iter": 4900, "lr": 0.001, "memory": 9050, "data_time": 0.02192, "loss_cls": 0.34272, "loss_bbox": 0.42918, "loss": 0.7719, "grad_norm": 2.14382, "time": 2.0999}
{"mode": "train", "epoch": 27, "iter": 4950, "lr": 0.001, "memory": 9050, "data_time": 0.02305, "loss_cls": 0.34903, "loss_bbox": 0.42861, "loss": 0.77764, "grad_norm": 2.27779, "time": 2.0853}
{"mode": "train", "epoch": 27, "iter": 5000, "lr": 0.001, "memory": 9050, "data_time": 0.02343, "loss_cls": 0.33771, "loss_bbox": 0.43708, "loss": 0.77478, "grad_norm": 2.22356, "time": 2.10424}
{"mode": "train", "epoch": 28, "iter": 5050, "lr": 0.001, "memory": 9050, "data_time": 0.42747, "loss_cls": 0.33031, "loss_bbox": 0.42893, "loss": 0.75925, "grad_norm": 2.1269, "time": 2.53749}
{"mode": "train", "epoch": 28, "iter": 5100, "lr": 0.001, "memory": 9050, "data_time": 0.02298, "loss_cls": 0.32792, "loss_bbox": 0.42664, "loss": 0.75456, "grad_norm": 2.21198, "time": 2.08073}
{"mode": "train", "epoch": 28, "iter": 5150, "lr": 0.001, "memory": 9050, "data_time": 0.02338, "loss_cls": 0.33785, "loss_bbox": 0.42449, "loss": 0.76234, "grad_norm": 2.32351, "time": 2.1018}
{"mode": "train", "epoch": 28, "iter": 5200, "lr": 0.001, "memory": 9050, "data_time": 0.02332, "loss_cls": 0.34598, "loss_bbox": 0.43951, "loss": 0.78549, "grad_norm": 2.27075, "time": 2.10479}
{"mode": "train", "epoch": 29, "iter": 5250, "lr": 0.001, "memory": 9050, "data_time": 0.28559, "loss_cls": 0.32813, "loss_bbox": 0.41993, "loss": 0.74807, "grad_norm": 2.23248, "time": 2.3557}
{"mode": "train", "epoch": 29, "iter": 5300, "lr": 0.001, "memory": 9050, "data_time": 0.02239, "loss_cls": 0.32759, "loss_bbox": 0.42794, "loss": 0.75552, "grad_norm": 2.13747, "time": 2.10411}
{"mode": "train", "epoch": 29, "iter": 5350, "lr": 0.001, "memory": 9050, "data_time": 0.02251, "loss_cls": 0.344, "loss_bbox": 0.41641, "loss": 0.76041, "grad_norm": 2.3775, "time": 2.10628}
{"mode": "train", "epoch": 30, "iter": 5400, "lr": 0.001, "memory": 9050, "data_time": 1.85275, "loss_cls": 0.35438, "loss_bbox": 0.41399, "loss": 0.76837, "grad_norm": 2.06014, "time": 3.91482}
{"mode": "train", "epoch": 30, "iter": 5450, "lr": 0.001, "memory": 9050, "data_time": 0.02297, "loss_cls": 0.32224, "loss_bbox": 0.41475, "loss": 0.73699, "grad_norm": 2.26999, "time": 2.10486}
{"mode": "train", "epoch": 30, "iter": 5500, "lr": 0.001, "memory": 9050, "data_time": 0.02223, "loss_cls": 0.32209, "loss_bbox": 0.40925, "loss": 0.73134, "grad_norm": 2.43547, "time": 2.09938}
{"mode": "train", "epoch": 30, "iter": 5550, "lr": 0.001, "memory": 9050, "data_time": 0.02311, "loss_cls": 0.33138, "loss_bbox": 0.4068, "loss": 0.73818, "grad_norm": 2.30934, "time": 2.09462}
