2024-01-18 22:44:41,105 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]
CUDA available: True
GPU 0: Tesla T4
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 12.2, V12.2.140
GCC: x86_64-linux-gnu-gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.11.0+cu113
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.12.0+cu113
OpenCV: 4.8.0
MMCV: 1.5.0
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.3
MMDetection: 2.20.0+f3aac93
------------------------------------------------------------

2024-01-18 22:44:41,315 - mmdet - INFO - Distributed training: True
2024-01-18 22:44:41,665 - mmdet - INFO - Config:
model = dict(
    type='RetinaNet',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=False),
        norm_eval=True,
        style='pytorch',
        init_cfg=dict(
            type='Pretrained',
            checkpoint='data/pretrain_models/resnet50-19c8e357.pth')),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        start_level=1,
        add_extra_convs='on_input',
        num_outs=5),
    bbox_head=dict(
        type='RetinaQualityEMAHead',
        num_classes=10,
        in_channels=256,
        stacked_convs=4,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            octave_base_scale=4,
            scales_per_octave=3,
            ratios=[0.5, 1.0, 2.0],
            strides=[8, 16, 32, 64, 128]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0),
        base_momentum=0.99),
    train_cfg=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.4,
            min_pos_iou=0,
            ignore_iof_thr=-1),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        nms_pre=5000,
        min_bbox_size=0,
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[20])
runner = dict(type='EpochBasedRunner', max_epochs=30)
checkpoint_config = dict(interval=30, max_keep_ckpts=1, by_epoch=True)
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
mmdet_base = '../../_base_'
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=6,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file=
        'work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round5/annotations/labeled.json',
        img_prefix='data/coco/train2017/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/instances_val2017.json',
        img_prefix='data/coco/val2017/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/instances_val2017.json',
        img_prefix='data/coco/val2017/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
labeled_data = 'work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round5/annotations/labeled.json'
unlabeled_data = 'work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round5/annotations/unlabeled.json'
evaluation = dict(interval=999999, metric='bbox')
work_dir = 'work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round5'
auto_resume = False
gpu_ids = range(0, 1)

2024-01-18 22:44:41,666 - mmdet - INFO - Set random seed to 783476543, deterministic: False
2024-01-18 22:44:42,144 - mmdet - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'data/pretrain_models/resnet50-19c8e357.pth'}
2024-01-18 22:44:42,484 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2024-01-18 22:44:42,547 - mmdet - INFO - initialize RetinaQualityEMAHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01, 'override': {'type': 'Normal', 'name': 'retina_cls', 'std': 0.01, 'bias_prob': 0.01}}
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from data/pretrain_models/resnet50-19c8e357.pth 

neck.lateral_convs.0.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

neck.lateral_convs.1.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

neck.lateral_convs.2.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

neck.fpn_convs.3.conv.weight - torch.Size([256, 2048, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

neck.fpn_convs.4.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.4.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

bbox_head.cls_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.cls_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

bbox_head.cls_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.cls_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

bbox_head.cls_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.cls_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

bbox_head.cls_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.cls_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

bbox_head.reg_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.reg_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

bbox_head.reg_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.reg_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

bbox_head.reg_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.reg_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

bbox_head.reg_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.reg_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RetinaNet  

bbox_head.retina_cls.weight - torch.Size([90, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=-4.59511985013459 

bbox_head.retina_cls.bias - torch.Size([90]): 
NormalInit: mean=0, std=0.01, bias=-4.59511985013459 

bbox_head.retina_reg.weight - torch.Size([36, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.retina_reg.bias - torch.Size([36]): 
NormalInit: mean=0, std=0.01, bias=0 
2024-01-18 22:44:48,703 - mmdet - INFO - Start running, host: root@a91b3ceedbf8, work_dir: /content/drive/MyDrive/PPALVuongTan/PPAL/work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round5
2024-01-18 22:44:48,704 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2024-01-18 22:44:48,704 - mmdet - INFO - workflow: [('train', 1)], max: 30 epochs
2024-01-18 22:44:48,704 - mmdet - INFO - Checkpoints will be saved to /content/drive/MyDrive/PPALVuongTan/PPAL/work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round5 by HardDiskBackend.
2024-01-18 22:46:47,024 - mmdet - INFO - Iter [50/13950]	lr: 9.890e-04, eta: 9:08:09, time: 2.366, data_time: 0.273, memory: 9050, loss_cls: 1.1447, loss_bbox: 2.0729, loss: 3.2176, grad_norm: 5.8366
2024-01-18 22:48:33,334 - mmdet - INFO - Iter [100/13950]	lr: 1.988e-03, eta: 8:38:29, time: 2.126, data_time: 0.024, memory: 9321, loss_cls: 1.0968, loss_bbox: 1.2051, loss: 2.3020, grad_norm: 9.9420
2024-01-18 22:50:19,204 - mmdet - INFO - Iter [150/13950]	lr: 2.987e-03, eta: 8:26:44, time: 2.117, data_time: 0.024, memory: 9780, loss_cls: 1.0029, loss_bbox: 1.2890, loss: 2.2919, grad_norm: 7.8178
2024-01-18 22:52:05,057 - mmdet - INFO - Iter [200/13950]	lr: 3.986e-03, eta: 8:19:58, time: 2.117, data_time: 0.025, memory: 9780, loss_cls: 0.9847, loss_bbox: 1.1636, loss: 2.1483, grad_norm: 5.7347
2024-01-18 22:53:50,885 - mmdet - INFO - Iter [250/13950]	lr: 4.985e-03, eta: 8:15:10, time: 2.117, data_time: 0.026, memory: 9780, loss_cls: 0.9673, loss_bbox: 1.1530, loss: 2.1203, grad_norm: 3.8519
2024-01-18 22:55:36,465 - mmdet - INFO - Iter [300/13950]	lr: 5.984e-03, eta: 8:11:12, time: 2.112, data_time: 0.025, memory: 9780, loss_cls: 0.9706, loss_bbox: 1.1542, loss: 2.1248, grad_norm: 7.4717
2024-01-18 22:57:21,697 - mmdet - INFO - Iter [350/13950]	lr: 6.983e-03, eta: 8:07:38, time: 2.105, data_time: 0.027, memory: 9780, loss_cls: 0.9995, loss_bbox: 1.1187, loss: 2.1182, grad_norm: 1.9600
2024-01-18 22:59:07,155 - mmdet - INFO - Iter [400/13950]	lr: 7.982e-03, eta: 8:04:39, time: 2.109, data_time: 0.026, memory: 9780, loss_cls: 0.8955, loss_bbox: 1.1399, loss: 2.0354, grad_norm: 1.7796
2024-01-18 23:00:50,919 - mmdet - INFO - Iter [450/13950]	lr: 8.981e-03, eta: 8:01:06, time: 2.075, data_time: 0.026, memory: 9780, loss_cls: 0.8582, loss_bbox: 1.1748, loss: 2.0330, grad_norm: 1.5198
2024-01-18 23:02:50,330 - mmdet - INFO - Iter [500/13950]	lr: 9.980e-03, eta: 8:07:06, time: 2.486, data_time: 0.390, memory: 9780, loss_cls: 0.7803, loss_bbox: 1.0761, loss: 1.8564, grad_norm: 2.9515
2024-01-18 23:04:34,587 - mmdet - INFO - Iter [550/13950]	lr: 1.000e-02, eta: 8:03:31, time: 2.085, data_time: 0.025, memory: 9780, loss_cls: 0.8881, loss_bbox: 1.0341, loss: 1.9223, grad_norm: 3.1525
2024-01-18 23:06:19,283 - mmdet - INFO - Iter [600/13950]	lr: 1.000e-02, eta: 8:00:23, time: 2.094, data_time: 0.026, memory: 9780, loss_cls: 0.8125, loss_bbox: 0.9399, loss: 1.7524, grad_norm: 2.2361
2024-01-18 23:08:04,343 - mmdet - INFO - Iter [650/13950]	lr: 1.000e-02, eta: 7:57:36, time: 2.101, data_time: 0.025, memory: 9780, loss_cls: 0.7331, loss_bbox: 0.9506, loss: 1.6837, grad_norm: 2.6778
2024-01-18 23:09:49,867 - mmdet - INFO - Iter [700/13950]	lr: 1.000e-02, eta: 7:55:07, time: 2.110, data_time: 0.026, memory: 9780, loss_cls: 0.6804, loss_bbox: 0.9670, loss: 1.6474, grad_norm: 2.7227
2024-01-18 23:11:34,340 - mmdet - INFO - Iter [750/13950]	lr: 1.000e-02, eta: 7:52:24, time: 2.089, data_time: 0.026, memory: 9780, loss_cls: 0.6445, loss_bbox: 0.9545, loss: 1.5991, grad_norm: 2.7115
2024-01-18 23:13:19,954 - mmdet - INFO - Iter [800/13950]	lr: 1.000e-02, eta: 7:50:08, time: 2.112, data_time: 0.026, memory: 9806, loss_cls: 0.6510, loss_bbox: 0.9762, loss: 1.6272, grad_norm: 2.6462
2024-01-18 23:15:05,300 - mmdet - INFO - Iter [850/13950]	lr: 1.000e-02, eta: 7:47:52, time: 2.107, data_time: 0.026, memory: 9806, loss_cls: 0.6213, loss_bbox: 0.9331, loss: 1.5544, grad_norm: 2.3323
2024-01-18 23:16:50,071 - mmdet - INFO - Iter [900/13950]	lr: 1.000e-02, eta: 7:45:30, time: 2.095, data_time: 0.027, memory: 9806, loss_cls: 0.5899, loss_bbox: 0.9366, loss: 1.5265, grad_norm: 2.5196
2024-01-18 23:18:49,487 - mmdet - INFO - Iter [950/13950]	lr: 1.000e-02, eta: 7:50:45, time: 2.757, data_time: 0.670, memory: 9806, loss_cls: 0.5951, loss_bbox: 0.8955, loss: 1.4906, grad_norm: 2.7381
2024-01-18 23:20:34,074 - mmdet - INFO - Exp name: retinanet_26e.py
2024-01-18 23:20:34,075 - mmdet - INFO - Iter [1000/13950]	lr: 1.000e-02, eta: 7:48:04, time: 2.092, data_time: 0.026, memory: 9806, loss_cls: 0.6070, loss_bbox: 0.9083, loss: 1.5153, grad_norm: 2.6449
2024-01-18 23:22:19,006 - mmdet - INFO - Iter [1050/13950]	lr: 1.000e-02, eta: 7:45:32, time: 2.099, data_time: 0.026, memory: 9806, loss_cls: 0.5966, loss_bbox: 0.8632, loss: 1.4599, grad_norm: 2.4944
2024-01-18 23:24:03,993 - mmdet - INFO - Iter [1100/13950]	lr: 1.000e-02, eta: 7:43:06, time: 2.100, data_time: 0.026, memory: 9806, loss_cls: 0.5535, loss_bbox: 0.8613, loss: 1.4148, grad_norm: 2.4867
2024-01-18 23:25:49,400 - mmdet - INFO - Iter [1150/13950]	lr: 1.000e-02, eta: 7:40:48, time: 2.108, data_time: 0.026, memory: 9806, loss_cls: 0.5582, loss_bbox: 0.8680, loss: 1.4262, grad_norm: 2.4406
2024-01-18 23:27:34,996 - mmdet - INFO - Iter [1200/13950]	lr: 1.000e-02, eta: 7:38:34, time: 2.112, data_time: 0.026, memory: 9806, loss_cls: 0.5799, loss_bbox: 0.9045, loss: 1.4844, grad_norm: 2.8519
2024-01-18 23:29:20,339 - mmdet - INFO - Iter [1250/13950]	lr: 1.000e-02, eta: 7:36:20, time: 2.107, data_time: 0.027, memory: 9806, loss_cls: 0.5573, loss_bbox: 0.8488, loss: 1.4061, grad_norm: 2.7987
2024-01-18 23:31:05,755 - mmdet - INFO - Iter [1300/13950]	lr: 1.000e-02, eta: 7:34:09, time: 2.108, data_time: 0.027, memory: 9806, loss_cls: 0.5811, loss_bbox: 0.8320, loss: 1.4131, grad_norm: 2.4016
2024-01-18 23:32:51,315 - mmdet - INFO - Iter [1350/13950]	lr: 1.000e-02, eta: 7:32:01, time: 2.111, data_time: 0.026, memory: 9806, loss_cls: 0.5763, loss_bbox: 0.8240, loss: 1.4003, grad_norm: 2.5841
2024-01-18 23:34:49,701 - mmdet - INFO - Iter [1400/13950]	lr: 1.000e-02, eta: 7:48:23, time: 4.583, data_time: 2.536, memory: 9806, loss_cls: 0.6633, loss_bbox: 0.7243, loss: 1.3876, grad_norm: 2.7546
2024-01-18 23:36:34,834 - mmdet - INFO - Iter [1450/13950]	lr: 1.000e-02, eta: 7:45:32, time: 2.103, data_time: 0.025, memory: 9806, loss_cls: 0.5729, loss_bbox: 0.7893, loss: 1.3622, grad_norm: 2.6735
2024-01-18 23:38:19,691 - mmdet - INFO - Iter [1500/13950]	lr: 1.000e-02, eta: 7:42:44, time: 2.097, data_time: 0.025, memory: 9806, loss_cls: 0.5893, loss_bbox: 0.8327, loss: 1.4220, grad_norm: 2.7113
2024-01-18 23:40:04,601 - mmdet - INFO - Iter [1550/13950]	lr: 1.000e-02, eta: 7:39:59, time: 2.098, data_time: 0.026, memory: 9806, loss_cls: 0.5554, loss_bbox: 0.7851, loss: 1.3405, grad_norm: 2.7031
2024-01-18 23:41:50,011 - mmdet - INFO - Iter [1600/13950]	lr: 1.000e-02, eta: 7:37:23, time: 2.108, data_time: 0.026, memory: 9806, loss_cls: 0.5278, loss_bbox: 0.8314, loss: 1.3592, grad_norm: 2.5806
2024-01-18 23:43:34,790 - mmdet - INFO - Iter [1650/13950]	lr: 1.000e-02, eta: 7:34:44, time: 2.096, data_time: 0.026, memory: 9806, loss_cls: 0.5877, loss_bbox: 0.7916, loss: 1.3793, grad_norm: 2.8677
2024-01-18 23:45:20,171 - mmdet - INFO - Iter [1700/13950]	lr: 1.000e-02, eta: 7:32:14, time: 2.108, data_time: 0.026, memory: 9806, loss_cls: 0.5463, loss_bbox: 0.7793, loss: 1.3256, grad_norm: 2.5676
2024-01-18 23:47:05,717 - mmdet - INFO - Iter [1750/13950]	lr: 1.000e-02, eta: 7:29:47, time: 2.111, data_time: 0.026, memory: 9806, loss_cls: 0.5217, loss_bbox: 0.7372, loss: 1.2589, grad_norm: 2.3941
2024-01-18 23:48:50,828 - mmdet - INFO - Iter [1800/13950]	lr: 1.000e-02, eta: 7:27:19, time: 2.102, data_time: 0.026, memory: 9806, loss_cls: 0.5508, loss_bbox: 0.7694, loss: 1.3202, grad_norm: 3.0681
2024-01-18 23:50:36,230 - mmdet - INFO - Iter [1850/13950]	lr: 1.000e-02, eta: 7:24:55, time: 2.108, data_time: 0.027, memory: 9806, loss_cls: 0.5535, loss_bbox: 0.7958, loss: 1.3493, grad_norm: 2.7401
2024-01-18 23:52:35,515 - mmdet - INFO - Iter [1900/13950]	lr: 1.000e-02, eta: 7:24:16, time: 2.429, data_time: 0.342, memory: 9806, loss_cls: 0.5339, loss_bbox: 0.7476, loss: 1.2815, grad_norm: 2.7760
2024-01-18 23:54:20,945 - mmdet - INFO - Iter [1950/13950]	lr: 1.000e-02, eta: 7:21:53, time: 2.109, data_time: 0.025, memory: 9806, loss_cls: 0.5006, loss_bbox: 0.7273, loss: 1.2279, grad_norm: 2.5884
2024-01-18 23:56:05,909 - mmdet - INFO - Exp name: retinanet_26e.py
2024-01-18 23:56:05,909 - mmdet - INFO - Iter [2000/13950]	lr: 1.000e-02, eta: 7:19:30, time: 2.099, data_time: 0.025, memory: 9806, loss_cls: 0.5244, loss_bbox: 0.7723, loss: 1.2967, grad_norm: 2.4824
2024-01-18 23:57:51,563 - mmdet - INFO - Iter [2050/13950]	lr: 1.000e-02, eta: 7:17:12, time: 2.113, data_time: 0.026, memory: 9806, loss_cls: 0.5176, loss_bbox: 0.7425, loss: 1.2601, grad_norm: 2.6749
2024-01-18 23:59:37,288 - mmdet - INFO - Iter [2100/13950]	lr: 1.000e-02, eta: 7:14:57, time: 2.114, data_time: 0.028, memory: 9806, loss_cls: 0.5284, loss_bbox: 0.7836, loss: 1.3120, grad_norm: 2.8544
2024-01-19 00:01:22,474 - mmdet - INFO - Iter [2150/13950]	lr: 1.000e-02, eta: 7:12:40, time: 2.104, data_time: 0.027, memory: 9806, loss_cls: 0.5156, loss_bbox: 0.7130, loss: 1.2286, grad_norm: 2.5401
2024-01-19 00:03:07,978 - mmdet - INFO - Iter [2200/13950]	lr: 1.000e-02, eta: 7:10:26, time: 2.110, data_time: 0.027, memory: 9806, loss_cls: 0.4896, loss_bbox: 0.7069, loss: 1.1965, grad_norm: 2.3678
2024-01-19 00:04:53,530 - mmdet - INFO - Iter [2250/13950]	lr: 1.000e-02, eta: 7:08:13, time: 2.111, data_time: 0.027, memory: 9806, loss_cls: 0.5283, loss_bbox: 0.7376, loss: 1.2659, grad_norm: 2.8555
2024-01-19 00:06:38,826 - mmdet - INFO - Iter [2300/13950]	lr: 1.000e-02, eta: 7:06:01, time: 2.106, data_time: 0.027, memory: 9806, loss_cls: 0.5094, loss_bbox: 0.7505, loss: 1.2599, grad_norm: 2.4924
2024-01-19 00:08:37,442 - mmdet - INFO - Iter [2350/13950]	lr: 1.000e-02, eta: 7:05:58, time: 2.629, data_time: 0.534, memory: 9806, loss_cls: 0.4798, loss_bbox: 0.6831, loss: 1.1629, grad_norm: 2.4183
2024-01-19 00:10:21,151 - mmdet - INFO - Iter [2400/13950]	lr: 1.000e-02, eta: 7:03:37, time: 2.074, data_time: 0.025, memory: 9806, loss_cls: 0.4955, loss_bbox: 0.7112, loss: 1.2067, grad_norm: 2.4989
2024-01-19 00:12:05,718 - mmdet - INFO - Iter [2450/13950]	lr: 1.000e-02, eta: 7:01:21, time: 2.091, data_time: 0.026, memory: 9806, loss_cls: 0.5037, loss_bbox: 0.7189, loss: 1.2225, grad_norm: 2.7675
2024-01-19 00:13:51,053 - mmdet - INFO - Iter [2500/13950]	lr: 1.000e-02, eta: 6:59:10, time: 2.107, data_time: 0.026, memory: 9806, loss_cls: 0.4704, loss_bbox: 0.7019, loss: 1.1723, grad_norm: 2.5545
2024-01-19 00:15:35,830 - mmdet - INFO - Iter [2550/13950]	lr: 1.000e-02, eta: 6:56:58, time: 2.096, data_time: 0.025, memory: 9806, loss_cls: 0.4977, loss_bbox: 0.7010, loss: 1.1987, grad_norm: 2.5979
2024-01-19 00:17:21,368 - mmdet - INFO - Iter [2600/13950]	lr: 1.000e-02, eta: 6:54:50, time: 2.111, data_time: 0.026, memory: 9806, loss_cls: 0.5181, loss_bbox: 0.7447, loss: 1.2628, grad_norm: 2.7471
2024-01-19 00:19:06,191 - mmdet - INFO - Iter [2650/13950]	lr: 1.000e-02, eta: 6:52:40, time: 2.096, data_time: 0.026, memory: 9806, loss_cls: 0.4769, loss_bbox: 0.7239, loss: 1.2008, grad_norm: 2.4355
2024-01-19 00:20:50,995 - mmdet - INFO - Iter [2700/13950]	lr: 1.000e-02, eta: 6:50:30, time: 2.096, data_time: 0.026, memory: 9806, loss_cls: 0.5049, loss_bbox: 0.7017, loss: 1.2066, grad_norm: 2.6912
2024-01-19 00:22:36,589 - mmdet - INFO - Iter [2750/13950]	lr: 1.000e-02, eta: 6:48:25, time: 2.112, data_time: 0.026, memory: 9806, loss_cls: 0.4726, loss_bbox: 0.7077, loss: 1.1803, grad_norm: 2.4472
2024-01-19 00:24:34,754 - mmdet - INFO - Iter [2800/13950]	lr: 1.000e-02, eta: 6:50:25, time: 3.342, data_time: 1.275, memory: 9806, loss_cls: 0.5166, loss_bbox: 0.6835, loss: 1.2000, grad_norm: 2.9648
2024-01-19 00:26:20,662 - mmdet - INFO - Iter [2850/13950]	lr: 1.000e-02, eta: 6:48:17, time: 2.118, data_time: 0.026, memory: 9806, loss_cls: 0.4898, loss_bbox: 0.7438, loss: 1.2337, grad_norm: 2.7423
2024-01-19 00:28:06,121 - mmdet - INFO - Iter [2900/13950]	lr: 1.000e-02, eta: 6:46:08, time: 2.109, data_time: 0.026, memory: 9806, loss_cls: 0.4768, loss_bbox: 0.6816, loss: 1.1584, grad_norm: 2.3658
2024-01-19 00:29:51,667 - mmdet - INFO - Iter [2950/13950]	lr: 1.000e-02, eta: 6:44:01, time: 2.111, data_time: 0.026, memory: 9806, loss_cls: 0.4767, loss_bbox: 0.6887, loss: 1.1654, grad_norm: 2.2129
2024-01-19 00:31:36,223 - mmdet - INFO - Exp name: retinanet_26e.py
2024-01-19 00:31:36,224 - mmdet - INFO - Iter [3000/13950]	lr: 1.000e-02, eta: 6:41:50, time: 2.091, data_time: 0.025, memory: 9806, loss_cls: 0.4704, loss_bbox: 0.6779, loss: 1.1483, grad_norm: 2.4004
2024-01-19 00:33:21,611 - mmdet - INFO - Iter [3050/13950]	lr: 1.000e-02, eta: 6:39:43, time: 2.108, data_time: 0.026, memory: 9806, loss_cls: 0.4714, loss_bbox: 0.6887, loss: 1.1601, grad_norm: 2.6701
2024-01-19 00:35:07,244 - mmdet - INFO - Iter [3100/13950]	lr: 1.000e-02, eta: 6:37:38, time: 2.113, data_time: 0.026, memory: 9806, loss_cls: 0.4839, loss_bbox: 0.6772, loss: 1.1610, grad_norm: 2.6288
2024-01-19 00:36:52,502 - mmdet - INFO - Iter [3150/13950]	lr: 1.000e-02, eta: 6:35:32, time: 2.105, data_time: 0.026, memory: 9806, loss_cls: 0.4888, loss_bbox: 0.6751, loss: 1.1639, grad_norm: 2.8398
2024-01-19 00:38:37,176 - mmdet - INFO - Iter [3200/13950]	lr: 1.000e-02, eta: 6:33:24, time: 2.093, data_time: 0.026, memory: 9806, loss_cls: 0.4710, loss_bbox: 0.6707, loss: 1.1417, grad_norm: 2.4015
2024-01-19 00:40:22,512 - mmdet - INFO - Iter [3250/13950]	lr: 1.000e-02, eta: 6:31:20, time: 2.107, data_time: 0.026, memory: 9806, loss_cls: 0.4691, loss_bbox: 0.6894, loss: 1.1586, grad_norm: 2.7124
