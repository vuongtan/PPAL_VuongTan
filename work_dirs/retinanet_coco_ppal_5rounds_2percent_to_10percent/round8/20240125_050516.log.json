{"env_info": "sys.platform: linux\nPython: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]\nCUDA available: True\nGPU 0: Tesla T4\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 12.2, V12.2.140\nGCC: x86_64-linux-gnu-gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nPyTorch: 1.11.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0+cu113\nOpenCV: 4.8.0\nMMCV: 1.5.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.3\nMMDetection: 2.20.0+f3aac93", "config": "model = dict(\n    type='RetinaNet',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint=\n            '/content/drive/MyDrive/PPALVuongTan/PPAL/work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round8/epoch_20.pth'\n        )),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=1,\n        add_extra_convs='on_input',\n        num_outs=5),\n    bbox_head=dict(\n        type='RetinaQualityEMAHead',\n        num_classes=10,\n        in_channels=256,\n        stacked_convs=4,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            octave_base_scale=4,\n            scales_per_octave=3,\n            ratios=[0.5, 1.0, 2.0],\n            strides=[8, 16, 32, 64, 128]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0),\n        base_momentum=0.99),\n    train_cfg=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.4,\n            min_pos_iou=0,\n            ignore_iof_thr=-1),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    test_cfg=dict(\n        nms_pre=5000,\n        min_bbox_size=0,\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[20])\nrunner = dict(type='EpochBasedRunner', max_epochs=10)\ncheckpoint_config = dict(interval=5, max_keep_ckpts=1, by_epoch=True)\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nmmdet_base = '../../_base_'\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file=\n        'work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round8/annotations/labeled.json',\n        img_prefix='data/coco/train2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='data/coco/annotations/instances_val2017.json',\n        img_prefix='data/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='data/coco/annotations/instances_val2017.json',\n        img_prefix='data/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlabeled_data = 'work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round8/annotations/labeled.json'\nunlabeled_data = 'work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round8/annotations/unlabeled.json'\nevaluation = dict(interval=999999, metric='bbox')\nwork_dir = 'work_dirs/retinanet_coco_ppal_5rounds_2percent_to_10percent/round8'\nauto_resume = False\ngpu_ids = range(0, 1)\n", "seed": 745053175, "exp_name": "retinanet_26e.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00099, "memory": 6332, "data_time": 0.60195, "loss_cls": 1.14759, "loss_bbox": 2.36865, "loss": 3.51623, "grad_norm": 1.23817, "time": 1.87518}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00199, "memory": 6332, "data_time": 0.07424, "loss_cls": 1.13921, "loss_bbox": 1.59541, "loss": 2.73462, "grad_norm": 2.05507, "time": 1.40321}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00299, "memory": 6495, "data_time": 0.15485, "loss_cls": 1.12403, "loss_bbox": 1.16997, "loss": 2.29401, "grad_norm": 1.23429, "time": 1.48894}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00399, "memory": 6593, "data_time": 0.07543, "loss_cls": 1.10225, "loss_bbox": 1.16513, "loss": 2.26738, "grad_norm": 1.44035, "time": 1.38221}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00499, "memory": 6593, "data_time": 0.15411, "loss_cls": 1.02533, "loss_bbox": 1.17254, "loss": 2.19787, "grad_norm": 1.72208, "time": 1.49381}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00598, "memory": 6960, "data_time": 0.10265, "loss_cls": 0.86986, "loss_bbox": 1.1235, "loss": 1.99336, "grad_norm": 1.86878, "time": 1.42276}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00698, "memory": 6960, "data_time": 0.10269, "loss_cls": 0.86523, "loss_bbox": 1.14877, "loss": 2.014, "grad_norm": 1.92942, "time": 1.42377}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00798, "memory": 6960, "data_time": 0.0585, "loss_cls": 0.8531, "loss_bbox": 1.15087, "loss": 2.00397, "grad_norm": 1.69601, "time": 1.40321}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00898, "memory": 11475, "data_time": 0.05373, "loss_cls": 0.9318, "loss_bbox": 1.102, "loss": 2.03379, "grad_norm": 1.4849, "time": 1.38279}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00998, "memory": 11475, "data_time": 0.23258, "loss_cls": 0.86979, "loss_bbox": 1.16887, "loss": 2.03867, "grad_norm": 1.57724, "time": 1.54913}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.01, "memory": 11475, "data_time": 0.14674, "loss_cls": 0.91576, "loss_bbox": 1.12486, "loss": 2.04063, "grad_norm": 1.10613, "time": 1.46408}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.01, "memory": 11475, "data_time": 0.08329, "loss_cls": 0.83298, "loss_bbox": 1.20361, "loss": 2.03659, "grad_norm": 0.93756, "time": 1.42416}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.01, "memory": 11475, "data_time": 0.05094, "loss_cls": 0.85656, "loss_bbox": 1.15972, "loss": 2.01629, "grad_norm": 1.20953, "time": 1.37579}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.01, "memory": 11475, "data_time": 0.10293, "loss_cls": 0.83977, "loss_bbox": 1.13576, "loss": 1.97553, "grad_norm": 1.29685, "time": 1.42952}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.01, "memory": 11475, "data_time": 0.11881, "loss_cls": 0.84472, "loss_bbox": 1.09217, "loss": 1.93688, "grad_norm": 1.08398, "time": 1.44725}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.01, "memory": 11475, "data_time": 0.0372, "loss_cls": 0.83543, "loss_bbox": 1.04078, "loss": 1.87621, "grad_norm": 1.47841, "time": 1.37505}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.01, "memory": 11475, "data_time": 0.11534, "loss_cls": 0.83255, "loss_bbox": 1.06179, "loss": 1.89434, "grad_norm": 1.41137, "time": 1.44678}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.01, "memory": 11475, "data_time": 0.06479, "loss_cls": 0.79479, "loss_bbox": 1.03072, "loss": 1.82551, "grad_norm": 1.41415, "time": 1.38986}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.01, "memory": 11475, "data_time": 0.06033, "loss_cls": 0.80451, "loss_bbox": 1.10553, "loss": 1.91005, "grad_norm": 1.34577, "time": 1.38595}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.01, "memory": 11475, "data_time": 0.15158, "loss_cls": 0.80835, "loss_bbox": 1.05969, "loss": 1.86804, "grad_norm": 1.37151, "time": 1.49538}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.01, "memory": 11475, "data_time": 0.09036, "loss_cls": 0.79965, "loss_bbox": 1.03358, "loss": 1.83323, "grad_norm": 1.34908, "time": 1.43564}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.01, "memory": 11475, "data_time": 0.1758, "loss_cls": 0.79311, "loss_bbox": 1.0007, "loss": 1.79381, "grad_norm": 1.23218, "time": 1.50767}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.01, "memory": 11475, "data_time": 0.34898, "loss_cls": 0.7792, "loss_bbox": 0.99784, "loss": 1.77705, "grad_norm": 1.0411, "time": 1.69165}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.01, "memory": 11475, "data_time": 0.01376, "loss_cls": 0.79766, "loss_bbox": 1.03243, "loss": 1.83009, "grad_norm": 1.3595, "time": 1.33227}
{"mode": "train", "epoch": 2, "iter": 1250, "lr": 0.01, "memory": 11475, "data_time": 0.01482, "loss_cls": 0.77224, "loss_bbox": 1.06079, "loss": 1.83303, "grad_norm": 1.2815, "time": 1.34639}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 0.01, "memory": 11475, "data_time": 0.01476, "loss_cls": 0.77768, "loss_bbox": 0.99921, "loss": 1.77689, "grad_norm": 1.32852, "time": 1.34709}
{"mode": "train", "epoch": 2, "iter": 1350, "lr": 0.01, "memory": 11475, "data_time": 0.01494, "loss_cls": 0.82086, "loss_bbox": 1.00922, "loss": 1.83008, "grad_norm": 1.43429, "time": 1.34257}
{"mode": "train", "epoch": 2, "iter": 1400, "lr": 0.01, "memory": 11475, "data_time": 0.01498, "loss_cls": 0.77965, "loss_bbox": 1.01685, "loss": 1.79651, "grad_norm": 1.27876, "time": 1.34122}
{"mode": "train", "epoch": 2, "iter": 1450, "lr": 0.01, "memory": 11475, "data_time": 0.01536, "loss_cls": 0.7835, "loss_bbox": 0.96853, "loss": 1.75203, "grad_norm": 1.31115, "time": 1.34945}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 0.01, "memory": 11475, "data_time": 0.01595, "loss_cls": 0.74862, "loss_bbox": 0.95078, "loss": 1.6994, "grad_norm": 1.23886, "time": 1.34408}
{"mode": "train", "epoch": 2, "iter": 1550, "lr": 0.01, "memory": 11475, "data_time": 0.01526, "loss_cls": 0.77355, "loss_bbox": 0.9988, "loss": 1.77235, "grad_norm": 1.43663, "time": 1.34504}
{"mode": "train", "epoch": 2, "iter": 1600, "lr": 0.01, "memory": 11475, "data_time": 0.01509, "loss_cls": 0.76451, "loss_bbox": 1.03348, "loss": 1.79799, "grad_norm": 1.23502, "time": 1.33021}
{"mode": "train", "epoch": 2, "iter": 1650, "lr": 0.01, "memory": 11475, "data_time": 0.01539, "loss_cls": 0.75437, "loss_bbox": 0.98734, "loss": 1.74171, "grad_norm": 1.27765, "time": 1.33136}
{"mode": "train", "epoch": 2, "iter": 1700, "lr": 0.01, "memory": 11475, "data_time": 0.0155, "loss_cls": 0.76433, "loss_bbox": 1.03366, "loss": 1.79799, "grad_norm": 1.37096, "time": 1.34798}
{"mode": "train", "epoch": 2, "iter": 1750, "lr": 0.01, "memory": 11475, "data_time": 0.01532, "loss_cls": 0.76828, "loss_bbox": 0.99591, "loss": 1.76419, "grad_norm": 1.26764, "time": 1.32787}
{"mode": "train", "epoch": 2, "iter": 1800, "lr": 0.01, "memory": 11475, "data_time": 0.0156, "loss_cls": 0.78684, "loss_bbox": 0.99631, "loss": 1.78315, "grad_norm": 1.43091, "time": 1.35829}
{"mode": "train", "epoch": 2, "iter": 1850, "lr": 0.01, "memory": 11475, "data_time": 0.01581, "loss_cls": 0.74588, "loss_bbox": 0.98893, "loss": 1.73481, "grad_norm": 1.34997, "time": 1.35072}
{"mode": "train", "epoch": 2, "iter": 1900, "lr": 0.01, "memory": 11475, "data_time": 0.01564, "loss_cls": 0.74074, "loss_bbox": 0.99849, "loss": 1.73923, "grad_norm": 1.3507, "time": 1.32125}
{"mode": "train", "epoch": 2, "iter": 1950, "lr": 0.01, "memory": 11475, "data_time": 0.01605, "loss_cls": 0.74808, "loss_bbox": 0.96655, "loss": 1.71464, "grad_norm": 1.27651, "time": 1.3589}
{"mode": "train", "epoch": 2, "iter": 2000, "lr": 0.01, "memory": 11475, "data_time": 0.01627, "loss_cls": 0.74353, "loss_bbox": 0.99386, "loss": 1.73738, "grad_norm": 1.37471, "time": 1.35742}
{"mode": "train", "epoch": 2, "iter": 2050, "lr": 0.01, "memory": 11475, "data_time": 0.01572, "loss_cls": 0.73712, "loss_bbox": 0.99264, "loss": 1.72976, "grad_norm": 1.26784, "time": 1.35047}
{"mode": "train", "epoch": 2, "iter": 2100, "lr": 0.01, "memory": 11475, "data_time": 0.01559, "loss_cls": 0.75813, "loss_bbox": 0.97564, "loss": 1.73376, "grad_norm": 1.46175, "time": 1.35352}
{"mode": "train", "epoch": 2, "iter": 2150, "lr": 0.01, "memory": 11475, "data_time": 0.01567, "loss_cls": 0.75796, "loss_bbox": 0.99143, "loss": 1.74939, "grad_norm": 1.35408, "time": 1.35055}
{"mode": "train", "epoch": 2, "iter": 2200, "lr": 0.01, "memory": 11475, "data_time": 0.01576, "loss_cls": 0.77327, "loss_bbox": 0.96949, "loss": 1.74276, "grad_norm": 1.38403, "time": 1.34169}
{"mode": "train", "epoch": 3, "iter": 2250, "lr": 0.01, "memory": 11475, "data_time": 0.64496, "loss_cls": 0.73204, "loss_bbox": 0.95344, "loss": 1.68548, "grad_norm": 1.18133, "time": 1.99454}
{"mode": "train", "epoch": 3, "iter": 2300, "lr": 0.01, "memory": 11475, "data_time": 0.01418, "loss_cls": 0.76494, "loss_bbox": 0.9783, "loss": 1.74324, "grad_norm": 1.50896, "time": 1.35959}
{"mode": "train", "epoch": 3, "iter": 2350, "lr": 0.01, "memory": 11475, "data_time": 0.01459, "loss_cls": 0.72751, "loss_bbox": 0.98028, "loss": 1.70779, "grad_norm": 1.4359, "time": 1.34725}
{"mode": "train", "epoch": 3, "iter": 2400, "lr": 0.01, "memory": 11475, "data_time": 0.01499, "loss_cls": 0.73045, "loss_bbox": 0.95694, "loss": 1.68739, "grad_norm": 1.34024, "time": 1.34867}
{"mode": "train", "epoch": 3, "iter": 2450, "lr": 0.01, "memory": 11475, "data_time": 0.01534, "loss_cls": 0.73244, "loss_bbox": 1.01976, "loss": 1.7522, "grad_norm": 1.41004, "time": 1.34646}
{"mode": "train", "epoch": 3, "iter": 2500, "lr": 0.01, "memory": 11475, "data_time": 0.01544, "loss_cls": 0.71912, "loss_bbox": 1.00765, "loss": 1.72677, "grad_norm": 1.40238, "time": 1.33293}
{"mode": "train", "epoch": 3, "iter": 2550, "lr": 0.01, "memory": 11475, "data_time": 0.01585, "loss_cls": 0.73703, "loss_bbox": 0.96092, "loss": 1.69795, "grad_norm": 1.50496, "time": 1.36037}
{"mode": "train", "epoch": 3, "iter": 2600, "lr": 0.01, "memory": 11475, "data_time": 0.0157, "loss_cls": 0.71611, "loss_bbox": 0.97014, "loss": 1.68625, "grad_norm": 1.42334, "time": 1.35655}
{"mode": "train", "epoch": 3, "iter": 2650, "lr": 0.01, "memory": 11475, "data_time": 0.01551, "loss_cls": 0.72662, "loss_bbox": 0.96835, "loss": 1.69497, "grad_norm": 1.37975, "time": 1.3524}
{"mode": "train", "epoch": 3, "iter": 2700, "lr": 0.01, "memory": 11475, "data_time": 0.01607, "loss_cls": 0.72771, "loss_bbox": 0.95449, "loss": 1.6822, "grad_norm": 1.39019, "time": 1.36447}
{"mode": "train", "epoch": 3, "iter": 2750, "lr": 0.01, "memory": 11475, "data_time": 0.0158, "loss_cls": 0.72542, "loss_bbox": 0.95306, "loss": 1.67848, "grad_norm": 1.4452, "time": 1.34592}
{"mode": "train", "epoch": 3, "iter": 2800, "lr": 0.01, "memory": 11475, "data_time": 0.01615, "loss_cls": 0.74781, "loss_bbox": 0.97279, "loss": 1.7206, "grad_norm": 1.62863, "time": 1.35334}
{"mode": "train", "epoch": 3, "iter": 2850, "lr": 0.01, "memory": 11475, "data_time": 0.01588, "loss_cls": 0.73361, "loss_bbox": 0.94656, "loss": 1.68017, "grad_norm": 1.49253, "time": 1.3469}
{"mode": "train", "epoch": 3, "iter": 2900, "lr": 0.01, "memory": 11475, "data_time": 0.0158, "loss_cls": 0.72982, "loss_bbox": 0.9802, "loss": 1.71002, "grad_norm": 1.58868, "time": 1.34468}
{"mode": "train", "epoch": 3, "iter": 2950, "lr": 0.01, "memory": 11475, "data_time": 0.01596, "loss_cls": 0.70413, "loss_bbox": 0.9435, "loss": 1.64763, "grad_norm": 1.39804, "time": 1.35232}
{"mode": "train", "epoch": 3, "iter": 3000, "lr": 0.01, "memory": 11475, "data_time": 0.01606, "loss_cls": 0.69594, "loss_bbox": 0.97082, "loss": 1.66676, "grad_norm": 1.4302, "time": 1.35569}
{"mode": "train", "epoch": 3, "iter": 3050, "lr": 0.01, "memory": 11475, "data_time": 0.01608, "loss_cls": 0.70831, "loss_bbox": 0.97731, "loss": 1.68563, "grad_norm": 1.53253, "time": 1.35737}
{"mode": "train", "epoch": 3, "iter": 3100, "lr": 0.01, "memory": 11475, "data_time": 0.01618, "loss_cls": 0.71083, "loss_bbox": 0.91329, "loss": 1.62412, "grad_norm": 1.59867, "time": 1.33818}
{"mode": "train", "epoch": 3, "iter": 3150, "lr": 0.01, "memory": 11475, "data_time": 0.01581, "loss_cls": 0.7623, "loss_bbox": 0.9569, "loss": 1.71921, "grad_norm": 1.7927, "time": 1.34193}
{"mode": "train", "epoch": 3, "iter": 3200, "lr": 0.01, "memory": 11475, "data_time": 0.01614, "loss_cls": 0.72015, "loss_bbox": 0.94424, "loss": 1.66439, "grad_norm": 1.52734, "time": 1.34633}
{"mode": "train", "epoch": 3, "iter": 3250, "lr": 0.01, "memory": 11475, "data_time": 0.01604, "loss_cls": 0.70053, "loss_bbox": 0.9518, "loss": 1.65233, "grad_norm": 1.40873, "time": 1.35712}
{"mode": "train", "epoch": 3, "iter": 3300, "lr": 0.01, "memory": 11475, "data_time": 0.0159, "loss_cls": 0.68078, "loss_bbox": 0.94743, "loss": 1.62822, "grad_norm": 1.39255, "time": 1.35046}
{"mode": "train", "epoch": 4, "iter": 3350, "lr": 0.01, "memory": 11475, "data_time": 5.7258, "loss_cls": 0.79922, "loss_bbox": 0.9559, "loss": 1.75512, "grad_norm": 1.56328, "time": 7.08042}
{"mode": "train", "epoch": 4, "iter": 3400, "lr": 0.01, "memory": 11475, "data_time": 0.01456, "loss_cls": 0.86107, "loss_bbox": 0.98833, "loss": 1.8494, "grad_norm": 1.81658, "time": 1.36521}
{"mode": "train", "epoch": 4, "iter": 3450, "lr": 0.01, "memory": 11475, "data_time": 0.01485, "loss_cls": 0.81812, "loss_bbox": 0.96726, "loss": 1.78538, "grad_norm": 1.73056, "time": 1.34446}
{"mode": "train", "epoch": 4, "iter": 3500, "lr": 0.01, "memory": 11475, "data_time": 0.01566, "loss_cls": 0.76518, "loss_bbox": 0.94256, "loss": 1.70774, "grad_norm": 1.63385, "time": 1.35175}
{"mode": "train", "epoch": 4, "iter": 3550, "lr": 0.01, "memory": 11475, "data_time": 0.01559, "loss_cls": 0.73035, "loss_bbox": 0.96334, "loss": 1.69369, "grad_norm": 1.67242, "time": 1.34204}
{"mode": "train", "epoch": 4, "iter": 3600, "lr": 0.01, "memory": 11475, "data_time": 0.01599, "loss_cls": 0.73161, "loss_bbox": 0.93386, "loss": 1.66548, "grad_norm": 1.75978, "time": 1.34707}
{"mode": "train", "epoch": 4, "iter": 3650, "lr": 0.01, "memory": 11475, "data_time": 0.01558, "loss_cls": 0.7328, "loss_bbox": 0.92635, "loss": 1.65915, "grad_norm": 1.76482, "time": 1.34416}
{"mode": "train", "epoch": 4, "iter": 3700, "lr": 0.01, "memory": 11475, "data_time": 0.01579, "loss_cls": 0.70042, "loss_bbox": 0.95341, "loss": 1.65383, "grad_norm": 1.70565, "time": 1.35396}
{"mode": "train", "epoch": 4, "iter": 3750, "lr": 0.01, "memory": 11475, "data_time": 0.01554, "loss_cls": 0.70921, "loss_bbox": 0.93514, "loss": 1.64435, "grad_norm": 1.5753, "time": 1.33723}
{"mode": "train", "epoch": 4, "iter": 3800, "lr": 0.01, "memory": 11475, "data_time": 0.01583, "loss_cls": 0.6925, "loss_bbox": 0.94656, "loss": 1.63906, "grad_norm": 1.6827, "time": 1.3411}
{"mode": "train", "epoch": 4, "iter": 3850, "lr": 0.01, "memory": 11475, "data_time": 0.01625, "loss_cls": 0.69986, "loss_bbox": 0.92972, "loss": 1.62959, "grad_norm": 1.61162, "time": 1.34714}
{"mode": "train", "epoch": 4, "iter": 3900, "lr": 0.01, "memory": 11475, "data_time": 0.01605, "loss_cls": 0.72421, "loss_bbox": 0.94259, "loss": 1.6668, "grad_norm": 1.86689, "time": 1.34654}
{"mode": "train", "epoch": 4, "iter": 3950, "lr": 0.01, "memory": 11475, "data_time": 0.01562, "loss_cls": 0.70913, "loss_bbox": 0.90774, "loss": 1.61688, "grad_norm": 1.60776, "time": 1.3138}
{"mode": "train", "epoch": 4, "iter": 4000, "lr": 0.01, "memory": 11475, "data_time": 0.01633, "loss_cls": 0.7633, "loss_bbox": 0.95114, "loss": 1.71444, "grad_norm": 1.66946, "time": 1.35424}
{"mode": "train", "epoch": 4, "iter": 4050, "lr": 0.01, "memory": 11475, "data_time": 0.0161, "loss_cls": 0.68888, "loss_bbox": 0.94645, "loss": 1.63533, "grad_norm": 1.34266, "time": 1.33297}
{"mode": "train", "epoch": 4, "iter": 4100, "lr": 0.01, "memory": 11475, "data_time": 0.016, "loss_cls": 0.71034, "loss_bbox": 0.901, "loss": 1.61134, "grad_norm": 1.54829, "time": 1.348}
{"mode": "train", "epoch": 4, "iter": 4150, "lr": 0.01, "memory": 11475, "data_time": 0.01627, "loss_cls": 0.69427, "loss_bbox": 0.93121, "loss": 1.62547, "grad_norm": 1.72042, "time": 1.3481}
{"mode": "train", "epoch": 4, "iter": 4200, "lr": 0.01, "memory": 11475, "data_time": 0.01599, "loss_cls": 0.6832, "loss_bbox": 0.96274, "loss": 1.64594, "grad_norm": 1.62578, "time": 1.31207}
{"mode": "train", "epoch": 4, "iter": 4250, "lr": 0.01, "memory": 11475, "data_time": 0.01602, "loss_cls": 0.69121, "loss_bbox": 0.94403, "loss": 1.63523, "grad_norm": 1.67753, "time": 1.34353}
{"mode": "train", "epoch": 4, "iter": 4300, "lr": 0.01, "memory": 11475, "data_time": 0.01603, "loss_cls": 0.72301, "loss_bbox": 0.94305, "loss": 1.66607, "grad_norm": 1.69076, "time": 1.35388}
{"mode": "train", "epoch": 4, "iter": 4350, "lr": 0.01, "memory": 11475, "data_time": 0.01608, "loss_cls": 0.68505, "loss_bbox": 0.9165, "loss": 1.60155, "grad_norm": 1.58762, "time": 1.34138}
{"mode": "train", "epoch": 4, "iter": 4400, "lr": 0.01, "memory": 11475, "data_time": 0.01593, "loss_cls": 0.70125, "loss_bbox": 0.88677, "loss": 1.58803, "grad_norm": 1.59866, "time": 1.3374}
{"mode": "train", "epoch": 4, "iter": 4450, "lr": 0.01, "memory": 11475, "data_time": 0.0164, "loss_cls": 0.68058, "loss_bbox": 0.89272, "loss": 1.5733, "grad_norm": 1.60842, "time": 1.35474}
{"mode": "train", "epoch": 5, "iter": 4500, "lr": 0.01, "memory": 11475, "data_time": 0.33331, "loss_cls": 0.67992, "loss_bbox": 0.9536, "loss": 1.63352, "grad_norm": 1.69359, "time": 1.66026}
{"mode": "train", "epoch": 5, "iter": 4550, "lr": 0.01, "memory": 11475, "data_time": 0.01548, "loss_cls": 0.67603, "loss_bbox": 0.90861, "loss": 1.58464, "grad_norm": 1.75775, "time": 1.344}
{"mode": "train", "epoch": 5, "iter": 4600, "lr": 0.01, "memory": 11475, "data_time": 0.01563, "loss_cls": 0.70006, "loss_bbox": 0.93746, "loss": 1.63752, "grad_norm": 1.67759, "time": 1.34393}
{"mode": "train", "epoch": 5, "iter": 4650, "lr": 0.01, "memory": 11475, "data_time": 0.01564, "loss_cls": 0.70665, "loss_bbox": 0.94151, "loss": 1.64816, "grad_norm": 1.67358, "time": 1.33692}
{"mode": "train", "epoch": 5, "iter": 4700, "lr": 0.01, "memory": 11475, "data_time": 0.01569, "loss_cls": 0.65791, "loss_bbox": 0.88189, "loss": 1.53979, "grad_norm": 1.59, "time": 1.34436}
{"mode": "train", "epoch": 5, "iter": 4750, "lr": 0.01, "memory": 11475, "data_time": 0.01619, "loss_cls": 0.81756, "loss_bbox": 0.94531, "loss": 1.76287, "grad_norm": 2.09107, "time": 1.34336}
{"mode": "train", "epoch": 5, "iter": 4800, "lr": 0.01, "memory": 11475, "data_time": 0.01599, "loss_cls": 0.70765, "loss_bbox": 0.95916, "loss": 1.66681, "grad_norm": 1.49571, "time": 1.34721}
{"mode": "train", "epoch": 5, "iter": 4850, "lr": 0.01, "memory": 11475, "data_time": 0.01603, "loss_cls": 0.68123, "loss_bbox": 0.92636, "loss": 1.60759, "grad_norm": 1.65594, "time": 1.34756}
{"mode": "train", "epoch": 5, "iter": 4900, "lr": 0.01, "memory": 11475, "data_time": 0.01663, "loss_cls": 0.68089, "loss_bbox": 0.92037, "loss": 1.60126, "grad_norm": 1.65292, "time": 1.33601}
{"mode": "train", "epoch": 5, "iter": 4950, "lr": 0.01, "memory": 11475, "data_time": 0.01593, "loss_cls": 0.68788, "loss_bbox": 0.93511, "loss": 1.62299, "grad_norm": 1.76215, "time": 1.33725}
{"mode": "train", "epoch": 5, "iter": 5000, "lr": 0.01, "memory": 11475, "data_time": 0.01626, "loss_cls": 0.69369, "loss_bbox": 0.93989, "loss": 1.63358, "grad_norm": 1.646, "time": 1.34424}
{"mode": "train", "epoch": 5, "iter": 5050, "lr": 0.01, "memory": 11475, "data_time": 0.01589, "loss_cls": 0.76585, "loss_bbox": 0.9244, "loss": 1.69026, "grad_norm": 1.73198, "time": 1.3472}
{"mode": "train", "epoch": 5, "iter": 5100, "lr": 0.01, "memory": 11475, "data_time": 0.01642, "loss_cls": 0.67358, "loss_bbox": 0.8761, "loss": 1.54968, "grad_norm": 1.53605, "time": 1.32931}
{"mode": "train", "epoch": 5, "iter": 5150, "lr": 0.01, "memory": 11475, "data_time": 0.01605, "loss_cls": 0.67278, "loss_bbox": 0.90197, "loss": 1.57476, "grad_norm": 1.60819, "time": 1.3464}
{"mode": "train", "epoch": 5, "iter": 5200, "lr": 0.01, "memory": 11475, "data_time": 0.01599, "loss_cls": 0.6742, "loss_bbox": 0.90544, "loss": 1.57964, "grad_norm": 1.72723, "time": 1.32908}
{"mode": "train", "epoch": 5, "iter": 5250, "lr": 0.01, "memory": 11475, "data_time": 0.01606, "loss_cls": 0.7198, "loss_bbox": 0.9423, "loss": 1.6621, "grad_norm": 1.94107, "time": 1.34446}
{"mode": "train", "epoch": 5, "iter": 5300, "lr": 0.01, "memory": 11475, "data_time": 0.01639, "loss_cls": 0.66646, "loss_bbox": 0.8887, "loss": 1.55516, "grad_norm": 1.36082, "time": 1.35509}
{"mode": "train", "epoch": 5, "iter": 5350, "lr": 0.01, "memory": 11475, "data_time": 0.01594, "loss_cls": 0.71682, "loss_bbox": 0.9045, "loss": 1.62132, "grad_norm": 1.65156, "time": 1.35712}
{"mode": "train", "epoch": 5, "iter": 5400, "lr": 0.01, "memory": 11475, "data_time": 0.01625, "loss_cls": 0.67218, "loss_bbox": 0.88792, "loss": 1.5601, "grad_norm": 1.5812, "time": 1.34502}
{"mode": "train", "epoch": 5, "iter": 5450, "lr": 0.01, "memory": 11475, "data_time": 0.01609, "loss_cls": 0.67397, "loss_bbox": 0.89271, "loss": 1.56669, "grad_norm": 1.63142, "time": 1.34665}
{"mode": "train", "epoch": 5, "iter": 5500, "lr": 0.01, "memory": 11475, "data_time": 0.01604, "loss_cls": 0.66876, "loss_bbox": 0.91217, "loss": 1.58093, "grad_norm": 1.72133, "time": 1.35626}
{"mode": "train", "epoch": 5, "iter": 5550, "lr": 0.01, "memory": 11475, "data_time": 0.01611, "loss_cls": 0.70696, "loss_bbox": 0.88584, "loss": 1.5928, "grad_norm": 1.67615, "time": 1.35952}
{"mode": "train", "epoch": 6, "iter": 5600, "lr": 0.01, "memory": 11475, "data_time": 0.64085, "loss_cls": 0.67061, "loss_bbox": 0.92626, "loss": 1.59687, "grad_norm": 1.66142, "time": 1.98573}
{"mode": "train", "epoch": 6, "iter": 5650, "lr": 0.01, "memory": 11475, "data_time": 0.01434, "loss_cls": 0.65265, "loss_bbox": 0.89497, "loss": 1.54762, "grad_norm": 1.71685, "time": 1.36283}
{"mode": "train", "epoch": 6, "iter": 5700, "lr": 0.01, "memory": 11475, "data_time": 0.0143, "loss_cls": 0.66102, "loss_bbox": 0.89441, "loss": 1.55543, "grad_norm": 1.73052, "time": 1.31117}
{"mode": "train", "epoch": 6, "iter": 5750, "lr": 0.01, "memory": 11475, "data_time": 0.01578, "loss_cls": 0.65292, "loss_bbox": 0.85233, "loss": 1.50525, "grad_norm": 1.70344, "time": 1.35665}
{"mode": "train", "epoch": 6, "iter": 5800, "lr": 0.01, "memory": 11475, "data_time": 0.01538, "loss_cls": 0.6429, "loss_bbox": 0.88381, "loss": 1.52671, "grad_norm": 1.50813, "time": 1.34578}
{"mode": "train", "epoch": 6, "iter": 5850, "lr": 0.01, "memory": 11475, "data_time": 0.0154, "loss_cls": 0.66558, "loss_bbox": 0.887, "loss": 1.55257, "grad_norm": 1.79082, "time": 1.34148}
